/* Import dsfr with url, outside of webpack build, as a static file */
@import url('/dsfr/dsfr.min.css');
@import url('/dsfr/utility/utility.min.css');
@import url('https://cdn.jsdelivr.net/npm/remixicon@3.2.0/fonts/remixicon.css');

/* Layout setup */
html,
body,
body > div:not(#environment-information) {
  min-height: 100% !important;
  height: 100%;
}

textarea {
  resize: none;
}

:root {
  --slim-grey-border: 1px solid var(--border-default-grey);
}

/* Extensions of DSFR */
.fr-text--medium {
  font-weight: 500 !important;
}

/* DSFR Overrides and custom theming */

/* Remove header dropshadow */

.fr-header {
  filter: none;

  /* Custom user menu */
  .fr-header__tools-links {
    &::after {
      margin-top: 0;
    }

    .fr-btn {
      margin-bottom: 0;
      min-height: unset !important;
      padding: 8px 16px !important;
      font-size: 0.875rem !important;
    }

    .icon-only {
      padding: 8px 12px !important;
    }
  }

  .fr-header__brand {
    filter: none;
    border-bottom: var(--slim-grey-border);
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
  }

  .fr-menu {
    margin: 10px 0;
    padding: 0;
  }
}

.fr-btn--danger {
  background-color: var(--background-flat-error);

  &:not(:disabled):hover {
    background-color: var(--artwork-minor-red-marianne) !important;
  }

  &:not(:disabled):focus {
    background-color: var(--background-flat-error) !important;
  }
}

/* Buttons loading state */
@keyframes spinner-rotate-animation {
  0% {
    transform: rotate(0deg);
  }

  50% {
    transform: rotate(180deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.fr-btn.fr-btn--loading {
  &:not(.fr-btn--icon-right) {
    &::before {
      mask-image: url('/images/spinner.svg');
      animation: spinner-rotate-animation 1.2s infinite linear;
    }
  }

  &.fr-btn--icon-right {
    &::after {
      mask-image: url('/images/spinner.svg');
      animation: spinner-rotate-animation 1.2s infinite linear;
    }
  }

  /* Button without icon */

  /* Complex implementation as we need to re-implement logic of the ::after like with the fr-icon classes */
  &:not([class*=" fr-icon-"]) {
    position: relative;
    color: transparent;

    &::after {
      position: absolute;

      --icon-size: 1.5rem;

      color: var(--text-inverted-blue-france);
      left: calc(50% - (var(--icon-size) / 2));
      content: "";
      background-color: currentcolor;
      display: inline-block;
      flex: 0 0 auto;
      height: var(--icon-size);
      mask-size: 100% 100%;
      vertical-align: calc((0.75em - var(--icon-size))*.5);
      width: var(--icon-size);
      mask-image: url('/images/spinner.svg');
      animation: spinner-rotate-animation 1.2s infinite linear;
    }

    &.fr-btn--sm {
      &::after {
        --icon-size: 1rem;
      }
    }

    &.fr-btn--lg {
      &::after {
        --icon-size: 2rem;
      }
    }

    &:disabled {
      &::after {
        color: var(--text-disabled-grey);
      }
    }

    &.fr-btn--secondary, &.fr-btn--tertiary, &.fr-btn--tertiary-no-outline {
      &::after {
        color: var(--text-action-high-blue-france);
      }

      &:disabled {
        &::after {
          color: var(--text-disabled-grey);
        }
      }
    }
  }
}

/* Tabs */

/* Remove border */

.fr-tabs {
  box-shadow: unset;

  &::before {
    box-shadow: inset 0 1px 0 0 var(--border-default-grey);
  }
}

@media (min-width: 62em) {
  /* lg */
  .fr-header {
    box-shadow: inset 0 -1px 0 0 var(--border-default-grey),
      inset 0 1px 0 0 var(--border-default-grey);

    .fr-header__body-row {
      padding: 16px 0;
    }

    .fr-header__menu {
      .fr-nav__link:hover {
        box-shadow: inset 0 -1px 0 0 var(--border-default-grey),
          inset 0 1px 0 0 var(--border-default-grey);
      }
    }

    .fr-header__tools-links {
      margin-bottom: 0;
    }

    .fr-header__brand {
      border-bottom: none;
      padding-top: 0;
      padding-bottom: 0;
    }

    .fr-menu__list {
      box-shadow: none;
    }
  }
}