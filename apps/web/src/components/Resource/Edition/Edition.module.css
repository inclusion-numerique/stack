.container {
  max-width: calc(var(--edition-container-max-width));
  padding-left: var(--edition-container-x-padding);
  padding-right: var(--edition-container-x-padding);

  /* Enough room for the add button absolute collapsible choices to be displayable inside the container */
  padding-bottom: 360px;
}

.title {
  margin-top: 8px;
  margin-bottom: 12px;
  color: var(--grey-425-625);
}

.contentList {
  list-style: none;
  margin: 32px 0;

  &:empty {
    margin: 0;
  }
}

.contentAction,
.contentHoverableAction {
  display: flex;
  margin-top: 12px;
  justify-content: space-between;
}

.contentHoverableAction{
  opacity: 0;
  pointer-events: none;
}

.dragButton {
  position: absolute;
  opacity: 0 !important;
  pointer-events: none;
  cursor: grab;
  top: 12px;

  /* 4px on the left to allow space for focus-visible outline */
  left: 4px;
  padding:4px 6px;

  &:active{
    cursor: grabbing;
  }

  &::before {
    line-height: 20px;
    font-size: 20px;
  }
}

.content {
  position: relative;

  /* Hide content during exit "shrink" animation */
  overflow-y:hidden;

  /**
    Negative left margin + padding is for the hover drag handle (+ outline) to be inside the content div
    -1px bottom margin is to hide the double-border between .contentEdition but keeping it for drag animation
    Same thing on the right to allow the outline of focused button to be visible
   */
  margin: 0 -4px -1px -60px;
  padding: 0 4px 0 44px;

  /* Force background to hide background contents while dragging */
  background: white;

  &:hover, &:focus-within {
    .dragButton {
      opacity: 1 !important;
      pointer-events: initial;
    }

    .contentHoverableAction {
      opacity: 1;
      pointer-events: initial;
    }
  }
}

.contentEdition {
  border-bottom: var(--slim-grey-border);
  border-top: var(--slim-grey-border);
  padding: 16px 0;
}
